import sys
import math
import numpy as np

chessrow = 8
chessclum = 8
ferstRow = [(n + 1) % (2) for n in range(0,chessrow)]
secondRow = [n % 2 for n in range(0,chessrow)]

ChessValid = np.array(list(map(lambda n:  ferstRow if n % 2 == 1 else secondRow, range(0,chessclum))))

n = int(input())
for i in range(n):
    row, col, is_white = [int(j) for j in input().split()]
    paintingRow = row
    paintingClum = col
    flag = is_white


    painFerstRow =  list(map(lambda n: n % 2 , range(0,paintingRow)))
    painSecondRow =  list(map(lambda n: (n + 1) % 2 , range(0,paintingRow)))
    painting = np.array([painFerstRow if (n + (paintingClum + 1) % 2 + (not flag)) % 2 == 1 else painSecondRow for n in range(0,paintingClum) ])

    result = [np.array_equal(painting[j:j + 8, i:i + 8],ChessValid)  for i in range(0,paintingRow) for j in range(0,paintingClum)]

    print(result.count(True))
    
